name: Build CloudStream3 Plugins

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    name: Build and Generate CS3 Metadata
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Detect and list plugins
        id: list_plugins
        run: |
          echo "Detecting CloudStream3 plugins..."
          mkdir -p .cs3
          PLUGINS=$(find . -type d -name "src" -exec dirname {} \; | grep -v "node_modules" || true)
          echo "Found plugins:"
          echo "$PLUGINS"
          echo "plugins<<EOF" >> $GITHUB_OUTPUT
          echo "$PLUGINS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Generate .cs3 plugin manifests
        run: |
          echo "Generating .cs3 manifests..."
          mkdir -p .cs3
          COUNTER=0
          for plugin_dir in ${{ steps.list_plugins.outputs.plugins }}; do
            [ -d "$plugin_dir" ] || continue
            name=$(basename "$plugin_dir")
            cs3_file=".cs3/${name}.cs3"

            cat > "$cs3_file" << EOF
            {
              "name": "${name}",
              "version": "1.0.${COUNTER}",
              "type": "plugin",
              "description": "CloudStream3 plugin: ${name}",
              "entry_point": "${plugin_dir}/src/main/kotlin/",
              "dependencies": [],
              "config": {
                "enabled": true
              }
            }
            EOF
            echo "Created $cs3_file"
            COUNTER=$((COUNTER + 1))
          done

      - name: Create plugins.json
        run: |
          echo "Generating plugins.json..."
          echo '{ "name": "CloudStream3 Plugins", "version": "1.0.0", "plugins": [' > plugins.json
          first=true
          for file in .cs3/*.cs3; do
            [ -f "$file" ] || continue
            name=$(basename "$file" .cs3)
            url="https://raw.githubusercontent.com/${{ github.repository }}/main/.cs3/${name}.cs3"
            if [ "$first" = true ]; then
              first=false
            else
              echo "," >> plugins.json
            fi
            cat << EOF >> plugins.json
            {
              "id": "${name}",
              "name": "${name}",
              "description": "CloudStream3 plugin ${name}",
              "version": "1.0.0",
              "author": "UmayTrade",
              "cs3_url": "${url}",
              "enabled": true,
              "dependencies": []
            }
EOF
          done
          echo '] }' >> plugins.json
          echo "plugins.json created successfully"

      - name: Create repo.json
        run: |
          echo "Generating repo.json..."
          cat > repo.json << EOF
          {
            "name": "UmayTrade CS3 Repository",
            "version": "1.0.0",
            "description": "Official CloudStream3 Plugin Repository",
            "url": "https://github.com/${{ github.repository }}",
            "plugins_config": "https://raw.githubusercontent.com/${{ github.repository }}/main/plugins.json",
            "cs3_config": "https://raw.githubusercontent.com/${{ github.repository }}/main/.cs3/",
            "last_updated": "$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          }
          EOF
          echo "repo.json created successfully"

      - name: Validate JSON files
        run: |
          echo "Validating JSON syntax..."
          python -m json.tool plugins.json > /dev/null && echo "✓ plugins.json valid"
          python -m json.tool repo.json > /dev/null && echo "✓ repo.json valid"
          for cs3 in .cs3/*.cs3; do
            python -m json.tool "$cs3" > /dev/null && echo "✓ $cs3 valid"
          done

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cs3-artifacts
          path: |
            .cs3/
            plugins.json
            repo.json
          retention-days: 7

  deploy:
    name: Deploy CS3 Files to Main
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: cs3-artifacts
          path: ./dist

      - name: Copy artifacts into repo
        run: |
          cp -r dist/.cs3 . || mkdir -p .cs3 && cp -r dist/.cs3/. .cs3/
          cp dist/plugins.json .
          cp dist/repo.json .

      - name: Commit and push updated configs
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .cs3 plugins.json repo.json
          git commit -m "Auto-update CS3 manifests ($(date -u +'%Y-%m-%dT%H:%M:%SZ'))" || echo "No changes"
          git push origin main
